name: Build and Release Fortran Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10  # Set timeout to 2 hours; adjust as needed
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"  # Ensure Miniconda is installed
          auto-update-conda: true
          python-version: 3.12
          environment-file: seidart-environment.yml  # Assuming you have an environment.yml for dependencies
          activate-environment: seidart
          
      - name: Install GFortran and dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran libgfortran5

      - name: Install JSON-Fortran on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install json-fortran
          export JSON_FORTRAN_PREFIX=$(brew --prefix json-fortran)
          echo "JSON_FORTRAN_PREFIX=$JSON_FORTRAN_PREFIX" >> $GITHUB_ENV

      - name: Set paths for conda environment
        run: |
          export CONDA_PREFIX=$(conda info --base)/envs/seidart
          export INCLUDE_PATH=$CONDA_PREFIX/include
          export LIB_PATH=$CONDA_PREFIX/lib
          export BIN_PATH=$CONDA_PREFIX/bin
          echo "Paths set: INCLUDE_PATH=$INCLUDE_PATH, LIB_PATH=$LIB_PATH, BIN_PATH=$BIN_PATH"

      - name: Compile Fortran Code
        run: |
          make ||true
      
      - name: Upload Compile Output
        if: failure()  # Only upload if the compile step fails
        uses: actions/upload-artifact@v3
        with:
          name: compile_output
          path: compile_output.txt

      - name: Archive Binaries
        if: success()
        run: |
          mkdir -p release
          cp $BIN_PATH/seidartfdtd release/
        # Replace 'your_executable_name' with the actual executable name
          
      - name: Upload Binaries
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: seidart-fortran-binaries-${{ matrix.os }}
          path: release/
